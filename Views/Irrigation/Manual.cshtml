@model IsIoTWeb.Models.Error

@{
    ViewData["Title"] = "Control";
}

<h3>Irrigation Manual Control</h3>

<div id="errorMessages">
    @if(Model != null)
    {
        @foreach(var message in Model.ErrorMessages)
        {
            <p>@message</p>
        }
    }
</div>

<div class="text-right">
    <button type="button" class="btn btn-primary btnTurnAllOff">Turn All Valves Off</button>
</div>
<table class="table" id="tableValves">
    <thead>
        <tr>
            <th>
                Valve ID
            </th>
            <th>
                State
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
</table>
<hr />

<link rel="stylesheet" href="~/css/time_list.css" />
<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css" rel="stylesheet" type="text/css"/>


@section Scripts
{
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script type="text/javascript">
    
    $(document).ready(function () {
        UpdateTable();
        setInterval(UpdateTable, 5000);
    });
    
    function UpdateTable() {
        $.ajax({
            type: "POST",
            url: "/Irrigation/GetValvesState",
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: OnSuccess,
            failure: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            }
        });
    }

    $(document).on("click", ".btnTurnOn", function() {
        var id = $(this).attr("id");
        action = JSON.stringify(CreateValveAction(id, "TURN_ON"))
        $.ajax({
            type: "POST",
            url: "/Irrigation/Action",
            data: action,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(response) {
                if (response.errorMessages) {
	                DisplayErrors(response.errorMessages)
                }
            },
            failure: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            complete: function() {
                 UpdateTable()
            }
        });
    })

    $(document).on("click", ".btnTurnOff", function() {
        var id = $(this).attr("id");
        action = JSON.stringify(CreateValveAction(id, "TURN_OFF"))
        $.ajax({
            type: "POST",
            url: "/Irrigation/Action",
            data: action,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(response) {
                if (response.errorMessages) {
	                DisplayErrors(response.errorMessages)
                }
            },
            failure: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            complete: function() {
                 UpdateTable()
            }
        });
    })

    $(document).on("click", ".btnTurnAllOff", function() {
        $.ajax({
            type: "POST",
            url: "/Irrigation/TurnAllOff",
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(response) {
                if (response.errorMessages) {
	                DisplayErrors(response.errorMessages)
                }
            },
            failure: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            complete: function() {
                 UpdateTable()
            }
        });
    })

    function OnSuccess(response) {
        if (response.errorMessages) {
	        DisplayErrors(response.errorMessages)
        }

        $("#tableValves").DataTable({
            destroy: true,
            bFilter: false,
            bSort: false,
            stateSave: true,
            searching: false,
            bPaginate: false,
            data: response,
            columns: [{
                    data: 'valveId'
                },
                {
                    data: 'state'
                },
                {
                    data: 'valveId',
                    render: function(data, type, row) {
                        return '<button type="button" id=\'' + data + '\' class="btn btn-primary btnTurnOn">Turn On</button>'
                    }
                },
                {
                    data: 'valveId',
                    render: function(data, type, row) {
                        return '<button type="button" id=\'' + data + '\' class="btn btn-primary btnTurnOff">Turn Off</button>'
                    }
                }
            ]
        });
    };

    function CreateValveAction(id, action) {
        data = new Object();
        data.valveId = parseInt(id);
        data.action = action;
        return data;
    }
</script>

}  